# -*- coding: utf-8 -*-
"""
Задание 5.2a

Всё, как в задании 5.2, но, если пользователь ввел адрес хоста, а не адрес сети,
надо преобразовать адрес хоста в адрес сети и вывести адрес сети и маску, как в задании 5.2.

Пример адреса сети (все биты хостовой части равны нулю):
* 10.0.1.0/24
* 190.1.0.0/16

Пример адреса хоста:
* 10.0.1.1/24 - хост из сети 10.0.1.0/24
* 10.0.5.195/28 - хост из сети 10.0.5.192/28

Если пользователь ввел адрес 10.0.1.1/24,
вывод должен быть таким:

Network:
10        0         1         0
00001010  00000000  00000001  00000000

Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000

Проверить работу скрипта на разных комбинациях хост/маска, например:
    10.0.5.195/28, 10.0.1.1/24

Подсказка:
Есть адрес хоста в двоичном формате и маска сети 28. Адрес сети это первые 28 бит адреса хоста + 4 ноля.
То есть, например, адрес хоста 10.1.1.195/28  в двоичном формате будет
bin_ip = "00001010000000010000000111000011"

А адрес сети будет первых 28 символов из bin_ip + 0000 (4 потому что всего в адресе может быть 32 бита, а 32 - 28 = 4)
00001010000000010000000111000000

Ограничение: Все задания надо выполнять используя только пройденные темы.

"""

prefix = input('Введите IP-сети в формате: 10.1.1.0/24: ') or '10.1.1.0/24'
net, net_length = prefix.split('/')
net_length = int(net_length)
net1, net2, net3, net4 = net.split('.')
netbin = f'{int(net1):08b}{int(net2):08b}{int(net3):08b}{int(net4):08b}'
netbin = netbin[:net_length]+'0'*(32-net_length)

net1, net2, net3, net4 = int(netbin[:8],2), int(netbin[8:16],2), int(netbin[16:24],2), int(netbin[24:32],2)
net = f'{net1}.{net2}.{net3}.{net4}'
print(f'''
Network:
{net1:<10}{net2:<10}{net3:<10}{net4:<10}
{int(net1):08b}  {int(net2):08b}  {int(net3):08b}  {int(net4):08b}
''')

bitmask = '1'*net_length + '0'*(32-net_length)
bitmask1, bitmask2, bitmask3, bitmask4 = bitmask[:8], bitmask[8:16], bitmask[16:24], bitmask[24:32]
print(f'''
Mask:
/{net_length}
{int(bitmask1,2):<10}{int(bitmask2,2):<10}{int(bitmask3,2):<10}{int(bitmask4,2):<10}
{bitmask1}  {bitmask2}  {bitmask3}  {bitmask4}  
''')

